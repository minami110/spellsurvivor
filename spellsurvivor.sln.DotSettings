<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeAttributes/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/IndentSubtags/@EntryValue">ZeroIndent</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/IndentTagContent/@EntryValue">ZeroIndent</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/WRAP_LINES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/WrapBeforeAttr/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;
  &lt;TypePattern DisplayName="Non-reorderable types" Priority="99999999"&gt;
    &lt;TypePattern.Match&gt;
      &lt;Or&gt;
        &lt;And&gt;
          &lt;Kind Is="Interface" /&gt;
          &lt;Or&gt;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
        &lt;Kind Is="Struct" /&gt;
        &lt;HasAttribute Name="System.Runtime.InteropServices.StructLayoutAttribute" /&gt;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;
      &lt;/Or&gt;
    &lt;/TypePattern.Match&gt;
  &lt;/TypePattern&gt;
  
  &lt;TypePattern DisplayName="Default Pattern"&gt;
    &lt;Entry DisplayName="Godot export members" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Or&gt;
            &lt;Kind Is="Field" /&gt;
            &lt;Kind Is="Property" /&gt;
          &lt;/Or&gt;
          &lt;HasAttribute Name="Godot.ExportAttribute" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Public Delegates" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Access Is="Public" /&gt;
          &lt;Kind Is="Delegate" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;

    &lt;Entry DisplayName="Public Enums" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Access Is="Public" /&gt;
          &lt;Kind Is="Enum" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;

      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;

    &lt;Entry DisplayName="Static Fields and Constants"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;Kind Is="Constant" /&gt;
          &lt;And&gt;
            &lt;Kind Is="Field" /&gt;
            &lt;Static /&gt;
          &lt;/And&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;

      &lt;Entry.SortBy&gt;
        &lt;Kind&gt;
          &lt;Kind.Order&gt;
            &lt;DeclarationKind&gt;Constant&lt;/DeclarationKind&gt;
            &lt;DeclarationKind&gt;Field&lt;/DeclarationKind&gt;
          &lt;/Kind.Order&gt;
        &lt;/Kind&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;

    &lt;Entry DisplayName="Fields"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Field" /&gt;
          &lt;Not&gt;
            &lt;Static /&gt;
          &lt;/Not&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;

      &lt;Entry.SortBy&gt;
        &lt;Readonly /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Static Properties"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;And&gt;
            &lt;Kind Is="Property" /&gt;
            &lt;Static /&gt;
          &lt;/And&gt;
          &lt;Kind Is="Indexer" /&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected PrivateProtected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;

    &lt;Entry DisplayName="Properties, Indexers"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;And&gt;
            &lt;Kind Is="Property" /&gt;
          &lt;/And&gt;
          &lt;Kind Is="Indexer" /&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;

    &lt;Entry DisplayName="Constructors"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Constructor" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Static/&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods1" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_Notification" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods2" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_EnterTree" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods3" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_Ready" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods4" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_Input" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods5" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_PhysicsProcess" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods6" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_Process" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods7" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_ExitTree" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Godot override methods8" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Name Is="_.*" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Method" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected PrivateProtected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    
    &lt;Entry DisplayName="Interface Implementations" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Member" /&gt;
          &lt;ImplementsInterface /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;

      &lt;Entry.SortBy&gt;
        &lt;ImplementsInterface Immediate="true" /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;

    &lt;Entry DisplayName="All other members" /&gt;

    &lt;Entry DisplayName="Nested Types"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Type" /&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
  &lt;/TypePattern&gt;
&lt;/Patterns&gt;
</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=236f7aa5_002D7b06_002D43ca_002Dbf2a_002D9b31bfcff09a/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Any" AccessRightKinds="Private" Description="Constant fields (private)"&gt;&lt;ElementKinds&gt;&lt;Kind Name="CONSTANT_FIELD" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="AA_BB" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=669e5282_002Dfb4b_002D4e90_002D91e7_002D07d269d04b60/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Any" AccessRightKinds="Protected, ProtectedInternal, Internal, Public, PrivateProtected" Description="Constant fields (not private)"&gt;&lt;ElementKinds&gt;&lt;Kind Name="CONSTANT_FIELD" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AA_BB" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=a4f433b8_002Dabcd_002D4e55_002Da08f_002D82e78cef0f0c/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Any" AccessRightKinds="Any" Description="Local constants"&gt;&lt;ElementKinds&gt;&lt;Kind Name="LOCAL_CONSTANT" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="AA_BB" /&gt;&lt;/Policy&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002EMemberReordering_002EMigrations_002ECSharpFileLayoutPatternRemoveIsAttributeUpgrade/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>